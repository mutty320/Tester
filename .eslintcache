[{"C:\\Users\\mutty\\OneDrive\\Desktop\\qognify-tester-2\\src\\index.js":"1","C:\\Users\\mutty\\OneDrive\\Desktop\\qognify-tester-2\\src\\App.js":"2","C:\\Users\\mutty\\OneDrive\\Desktop\\qognify-tester-2\\src\\components\\Grid.js":"3","C:\\Users\\mutty\\OneDrive\\Desktop\\qognify-tester-2\\src\\components\\Camera.js":"4"},{"size":239,"mtime":1643717852593,"results":"5","hashOfConfig":"6"},{"size":5338,"mtime":1644411991073,"results":"7","hashOfConfig":"6"},{"size":4813,"mtime":1644500330012,"results":"8","hashOfConfig":"6"},{"size":617,"mtime":1644498734988,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"kim4kj",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mutty\\OneDrive\\Desktop\\qognify-tester-2\\src\\index.js",[],["21","22"],"C:\\Users\\mutty\\OneDrive\\Desktop\\qognify-tester-2\\src\\App.js",["23","24","25","26","27","28","29"],"import ReactPlayer from \"react-player\";\nimport React from \"react\";\n\nimport { Accordion, AccordionItem } from \"smart-webcomponents-react/accordion\";\nimport \"smart-webcomponents-react/source/styles/smart.default.css\";\nimport ReactDOM from \"react-dom\";\nimport {\n  MultilineTextBox,\n  ListItem,\n  ListItemsGroup,\n} from \"smart-webcomponents-react/multilinetextbox\";\nimport { Tree, TreeItem, TreeItemsGroup } from \"smart-webcomponents-react/tree\";\nimport \"./App.css\";\n\nimport Grid from \"./components/Grid\";\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst fileData = require(\"./components/config\"); //now f is an object holding array of objects\nconsole.log(fileData);\n\nconst CameraGroups = [];\nfor (let i in fileData.GROUPS) CameraGroups.push(fileData.GROUPS[i]);\n//once weve popelated the arr each item is a group that holdes:\n// 1.Camera_group- (group id) which will b the main banner\n// 2.camera_items- an array of all the items belonging to that group so we can iterat it for the dropdown\n\nlet a = {\"data\": \"key=IAfpK, age=58, key=WNVdi, age=64, key=jp9zt, age=47\"}\nlet b = a.data\n\nlet myStr = b.replace(/=/g, \":\")\n\nlet myStr2 = myStr.replace(/key/g, \"\\\"key\\\"\").replace(/age/g, \"\\\"age\\\"\")\nlet g = {\"data\": 0}\ng.data = myStr2\n//let c = JSON.parse(g)\nlet arr=[]\n//let obj =  b.data\n\n\n//var ar = obj.split('age=');\n//for(var x=0; x<ar.length;x++){\n // console.log(obj.split(/, (?='key')/).map(s => s.split('key ')))\n//}\n\n\nconsole.log(myStr)\nconsole.log(typeof myStr)\nconsole.log(myStr2)\nconsole.log(g)\nconsole.log(a)\n//console.log(c)\n\n\n\nconsole.log(CameraGroups.length);\nfor (let i in CameraGroups) {\n  for (let x in CameraGroups[i].camera_items)\n    console.log(i + \" \" + x + \" \" + CameraGroups[i].camera_items[x].name);\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//unction App() {\n\n// return (\n//   <div>\n//     <link\n//       rel=\"stylesheet\"\n//       href=\"../../source/styles/smart.default.css\"\n//       type=\"text/css\"\n//     />\n//     <script\n//       type=\"text/javascript\"\n//       src=\"../../source/smart.element.js\"\n//     ></script>\n//     <script\n//       type=\"text/javascript\"\n//       src=\"../../source/smart.button.js\"\n//     ></script>\n\n//     <body>\n//       <smart-button>Click Me</smart-button>\n//     </body>\n//     {/* <ReactPlayer controls url = 'https://www.youtube.com/watch?v=7sDY4m8KNLc&t=64s'/>*/}\n//   </div>\n// );\n\n//================================================\n\n//================================================\nclass App extends React.Component {\n  handleDragStart(event) {\n    if (event.detail.items[0].label === \"Communities\") {\n      event.preventDefault();\n    }\n  }\n\n  handleDragEnd(event) {\n    if (event.detail.items[0].label === \"Financial services\") {\n      event.preventDefault();\n      return;\n    }\n    if (!event.detail.container.closest(\"smart-tree\")) {\n      const textBox = event.detail.target.closest(\"smart-multiline-text-box\");\n      if (textBox) {\n        textBox.value = event.detail.items[0].label;\n      }\n    }\n  }\n\n  init() {}\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div>\n        <br />\n        <br />\n        <Tree\n          id=\"tree1\"\n          className=\"animation\"\n          allowDrag\n          allowDrop\n          onDragStart={this.handleDragStart.bind(this)}\n          onDragEnd={this.handleDragEnd.bind(this)}\n        >\n          <TreeItem style={{ color: \"red\" }}>Groups</TreeItem>\n\n          {/* ///////////////////////////////////////////////////////////// */}\n\n          {CameraGroups.map((group) => {\n            return (\n              <TreeItemsGroup\n                key={group.Camera_group}\n                style={{ color: \"blue\" }}\n              >\n                {group.Camera_group}\n\n                {group.camera_items.map((item) => (\n                  <TreeItem key={item.id}>\n                    {\" \"}\n                    <a href=\"https://www.youtube.com/watch?v=7sDY4m8KNLc&t=64s\">\n                      {item.name}\n                    </a>\n                  </TreeItem>\n                ))}\n              </TreeItemsGroup>\n            );\n          })}\n\n          {/* ////////////////////////////////////////////////////////////////// */}\n\n          {/*/////////////////////////////////////////////////////////////////////// */}\n\n          <TreeItemsGroup expanded>\n            Support\n            <TreeItem>Support home</TreeItem>\n            <TreeItem>Customer Service</TreeItem>\n            <TreeItem>Knowledge base</TreeItem>\n            <TreeItem>Support home</TreeItem>\n          </TreeItemsGroup>\n        </Tree>\n\n        <br />\n        <br />\n\n        {/* <ReactPlayer controls url =\"http://www.w3schools.com/html/mov_bbb.mp4\" type=\"video/mp4\"/> */}\n     \n\n        <div>\n          <div className= \"container demo-description\"></div>\n          <div className=\"Grid-layout\">\n            <div className=\"row\">\n              <div className=\"col-4 video\"> <Grid cameras={CameraGroups} /></div>\n              {/* <div className=\"col-sm-4 video\">\n               \n              </div>\n              <div className=\"col-sm-4 video\"></div> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\nexport default App;\n","C:\\Users\\mutty\\OneDrive\\Desktop\\qognify-tester-2\\src\\components\\Grid.js",["30","31","32"],"import ReactPlayer from \"react-player\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { BsFillGrid3X3GapFill, BsGridFill } from \"react-icons/bs\";\r\n\r\nimport { MdOutlineGrid4X4 } from \"react-icons/md\";\r\n\r\nimport { FaForward, FaBackward, FaPlay, FaPause } from \"react-icons/fa\";\r\nimport Camera from \"./Camera\";\r\n\r\nconst Grid = (props) => {\r\n  \r\n  const [camerasGrid, setCamerasGrid] = useState([]);\r\n  const [currLayout, setCurrLayout] = useState(4);\r\n  \r\n  // let camerasToDisplay = [];\r\n  // camerasToDisplay.push(\r\n  //   <Camera\r\n  //     width={\"200px\"}\r\n  //     controls\r\n  //     url={props.cameras[i].camera_items[x].video}\r\n  //     type={\"video/mp4\"}\r\n  //   />\r\n  // );\r\n\r\n  // const setAmountVisibility = (amount, visibility) => {\r\n  //   const tempCameras = [];\r\n  //   for (let index = 0; index < camerasGrid.length; index++) {\r\n  //     const element = camerasGrid[index];\r\n  //     element.visibility = index <= (amount - 1) ? visibility : !visibility;\r\n\r\n  //     tempCameras.push(element);\r\n  //   }\r\n  //   setCamerasGrid(tempCameras);\r\n  // };\r\n\r\n  const setAmountVisibility = (amount, visibility) => {\r\n    setCurrLayout((prevlLayout) => {\r\n      return Math.max(prevlLayout, amount);\r\n    });\r\n    setCamerasGrid((prevVisibility) => {\r\n      const tempCameras = [...prevVisibility];\r\n\r\n      for (let index = 0; index < currLayout; index++) {\r\n        let element = camerasGrid[index];\r\n        element.visibility = index <= (amount - 1) ? visibility : !visibility;\r\n\r\n        tempCameras[index] = element;\r\n      }\r\n\r\n      return tempCameras;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let tempCameras = [];\r\n    let counter = 0;\r\n    for (let i in props.cameras) {\r\n      for (let x in props.cameras[i].camera_items) {\r\n        tempCameras.push({\r\n          id: props.cameras[i].camera_items[x].id,\r\n          width: \"200px\",\r\n          //controls\r\n          url: props.cameras[i].camera_items[x].video,\r\n          visibility: counter < 4,\r\n        });\r\n        counter++;\r\n      }\r\n    }\r\n\r\n    setCamerasGrid(tempCameras);\r\n\r\n    console.log(camerasGrid);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(camerasGrid);\r\n  }, [camerasGrid]);\r\n\r\n  // const setInitialLayout = () => {\r\n  //   let temp = [];\r\n\r\n  //   for (let i = 0; i < initialLayout; i++) temp.push(camerasToDisplay[i]);\r\n\r\n  //   return temp;\r\n  // };\r\n\r\n  // const [currArray, setGridSize] = useState(setInitialLayout()); //we will use the state for the grid size variable\r\n\r\n  // const setGrid = (size) => {\r\n  //   setGridSize(() => {\r\n  //     console.log(size);\r\n\r\n  //     let temp = [];\r\n\r\n  //     for (let i = 0; i < size; i++) temp.push(camerasToDisplay[i]);\r\n\r\n  //     return temp;\r\n  //   });\r\n  // };\r\n\r\n  {\r\n    /* <li>{<ReactPlayer width=\"200px\"controls url={camera} type=\"video/mp4\" />}</li> */\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {camerasGrid.map(\r\n        (\r\n          camera //camera is an object\r\n        ) => (\r\n          <Camera key={camera.id} camera={camera} />\r\n        )\r\n      )}\r\n\r\n      <div\r\n        className=\"btn-toolbar mb-3\"\r\n        role=\"toolbar\"\r\n        aria-label=\"Toolbar with button groups\"\r\n      >\r\n        <div className=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n          <button type=\"button\" className=\"btn btn-secondary\">\r\n            <FaBackward size=\"2em\" color=\"black\" />\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-secondary\">\r\n            <FaPlay size=\"2em\" color=\"black\" />\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-secondary\">\r\n            <FaPause size=\"2em\" color=\"black\" />\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-secondary\">\r\n            <FaForward size=\"2em\" color=\"black\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"btn-toolbar mb-3\"\r\n        role=\"toolbar\"\r\n        aria-label=\"Toolbar with button groups\"\r\n      >\r\n        <div className=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setAmountVisibility(4, true)}\r\n          >\r\n            <BsGridFill size=\"2em\" color=\"red\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setAmountVisibility(9, true)}\r\n          >\r\n            <BsFillGrid3X3GapFill size=\"2em\" color=\"blue\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setAmountVisibility(10, true)}\r\n          >\r\n            <MdOutlineGrid4X4 size=\"2em\" color=\"#310080\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","C:\\Users\\mutty\\OneDrive\\Desktop\\qognify-tester-2\\src\\components\\Camera.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":19},{"ruleId":"37","severity":1,"message":"41","line":4,"column":10,"nodeType":"39","messageId":"40","endLine":4,"endColumn":19},{"ruleId":"37","severity":1,"message":"42","line":4,"column":21,"nodeType":"39","messageId":"40","endLine":4,"endColumn":34},{"ruleId":"37","severity":1,"message":"43","line":8,"column":3,"nodeType":"39","messageId":"40","endLine":8,"endColumn":19},{"ruleId":"37","severity":1,"message":"44","line":9,"column":3,"nodeType":"39","messageId":"40","endLine":9,"endColumn":11},{"ruleId":"37","severity":1,"message":"45","line":10,"column":3,"nodeType":"39","messageId":"40","endLine":10,"endColumn":17},{"ruleId":"37","severity":1,"message":"46","line":35,"column":5,"nodeType":"39","messageId":"40","endLine":35,"endColumn":8},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":73,"column":6,"nodeType":"49","endLine":73,"endColumn":8,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":101,"column":3,"nodeType":"53","messageId":"54","endLine":103,"endColumn":4},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'ReactPlayer' is defined but never used.","Identifier","unusedVar","'Accordion' is defined but never used.","'AccordionItem' is defined but never used.","'MultilineTextBox' is defined but never used.","'ListItem' is defined but never used.","'ListItemsGroup' is defined but never used.","'arr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'camerasGrid' and 'props.cameras'. Either include them or remove the dependency array.","ArrayExpression",["57"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [camerasGrid, props.cameras]",{"range":"60","text":"61"},[2102,2104],"[camerasGrid, props.cameras]"]